Введение
--------

include::section1_1.txt[]

Преобразования
~~~~~~~~~~~~~~

Над изображениями можно (и нужно) производить различные действия. Этим занимался
каждый, имеющий опыт творческой работы в Photoshop или других графических
редакторах. В результате одних действий меняется 'суть' того, что изображено на
картинке -- мы убираем «красные глаза», закрашиваем ненужных людей куском рядом
стоящего забора и так далее. Это 'творческая' работа. А сейчас мы рассмотрим
'технические' преобразования, для которых не требуется ни малейшего чувства
стиля и дизайнерских способностей, а только простейшие навыки и здравый смысл.

К таким преобразованиям относится, например, 'масштабирование'. Допустим, у нас
есть картинка 1024x768 пикселей. Нам нужно пропорционально уменьшить её для
размещения на сайте, причём размер итогового изображения должен быть 800x600
пикселей. На результирующей картинке будет то же самое изображение, что и на
исходной, только немного меньше.

Соотношение сторон 1024:768 соответствует 800:600 и, в более глубоком смысле,
телевизионному стандарту -- 4:3. Поэтому при масштабировании пропорции нарушены
не будут и изображение не будет выглядеть искажённым.

Это простой случай. Но бывают и посложнее. Допустим, у нас имеется
широкоэкранное видео с размером кадра 1280x720 (16:9), которое необходимо
подготовить для трансляции на канале, поддерживающем только стандартное
телевизионное соотношение сторон 4:3. Простое масштабирование не решит проблему:
после него люди в кадре будут щеголять растянутыми по вертикали лошадиными
лицамиfootnote:[Раньше, в пору расцвета видеосалонов и «подпольных» кабельных
каналов, такое встречалось повсеместно, да и сейчас тоже время от времени
попадается.]. Следовательно, нужно изменить соотношение сторон без искажения
пропорций, и для этого есть два способа.

Первый из них называется 'панорамированием' footnote:[По-английски
«letterboxing». Название происходит от вытянутой формы почтовых конвертов,
принятых за рубежом.]. Выглядит это так: если нам нужно получить 800 пикселей по
горизонтали, то давайте уменьшим кадр, и он станет 800x450 пикселей. По
вертикали нам нужно 600 пикселей, то есть 150 не хватает. Добавим пустую полоску
в 75 пикселей сверху и такую же снизу. Получим: 75 + 450 + 75 = 600 пикселей.
(Полоски обычно добавляют чёрные, чтобы не отвлекать внимание зрителя.)

Результат радует глаз. Всё красиво, без искажений... но одна деталь всё-таки
огорчает: раньше картинка по вертикали была 720 пикселей, а сейчас всего 450.
Из-за этого могут исчезать, превращаясь в группы непонятных пикселей, всякие
мелкие детали.

Что ж, пойдём от противного. По вертикали нам нужно 600 пикселей, вот и уменьшим
наш «большой» кадр так, чтобы он стал 600 по вертикали. Получим картинку
1066x600.  На этот раз она не помещается по горизонтали -- 266 пикселей лишние.
Ну вот и отрежем справа и слева по 133 пикселя!

Это называется 'кадрированием'. Оно, как и панорамирование, не нарушает
пропорций изображения, но тоже приводит к потерям. К ним относятся отрезанные
куски слева и справа. Разумеется, обычно там ничего важного нет, потому как
операторы стараются держать всё важное ближе к центру кадра. Но иногда
встречаются нюансы...

В общем, оба способа работают, но идеального преобразования между форматами не
существует. Это печально. А зачем, собственно, эти преобразования делать?
Неужели нельзя было договориться и сделать один формат на все случаи жизни?

Форматы
~~~~~~~

В мире существует целый зоопарк форматов, между которыми работникам компьютерной
графики приходится изобретательно лавировать. Иногда кажется, что причиной этого
является какой-то глобальный заговор мировой закулисы, желающей усложнить жизнь
простых тружеников мышки и планшета.

Увы, миром, как известно, правит не тайная ложа, а явная лажа. Весь этот
вселенский бардак является следствием непробиваемо логичных и, казалось бы,
единственно верных решений, принимаемых разными разработчиками совершенно
независимо.

Допустим, мы создаём простейший графический формат. Пока без никакого сжатия,
просто перечислим цвета точек, составляющих изображение. Построчно: сначала
первую строчку, потом вторую... и так до самого конца. Логично? Логично.

Но возникает вопрос: какую строчку считать первой? Мы, как пионеры компьютерной
графики, открываем учебник по геометрии и видим там картинку с пересечением
координатных осей. Где там нулевая точка? в левом нижнем углу? вот так и
сделаем -- это будет логично.

Так и сделали. С тех пор в формате Windows BMP строчки идут слева направо, снизу
вверх. А во всех остальных форматах -- 'сверху вниз'! Потому что именно сверху
вниз строчки идут в видеопамяти и так их гораздо удобнее отрисовывать. И это
тоже логично, кто бы сомневался.

Вот таким вот образом, основываясь на прочнейшем фундаменте незыблемой
логичности, разработчики, не успев оглянуться, наплодили огромное количество
графических форматов. К счастью, не все из этих форматов дожили до нынешнего
времени. Потому что разработчики таки собрались и кое о чём договорились.

Конечно, всех проблем это не решило. Форматы делались под решение вполне
конкретных проблем, под которые они подходили идеально -- каждый под свою. Время
шло, наука развивалась, появлялись новые технологии сжатия, и всё это нужно было
как-то совмещать со старыми программами... В итоге все эти золотые россыпи были
приведены в относительный порядок: что-то выкинули, что-то подкрасили, что-то
задокументировали и разработали инструментарий для перегонки одного в другое.
Так и выглядит нынешнее положение вещей. В общем и целом. А частности мы с вами
сейчас рассмотрим более подробно.
