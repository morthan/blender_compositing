Объекты и блоки данных
~~~~~~~~~~~~~~~~~~~~~~

Все мы знаем, что при запуске Blender в окне 3D-вида автоматически появляется
кубик. Это 'объект', с которым можно делать самые разные действия. Но эти наши
знания являются только верхушкой айсберга, а самое интересное скрыто в глубинах
Blender.

Дело в том, что трёхмерных объектов в Blender много и все они разные. Однако, у
них есть кое-что общее. У каждого объекта есть:

* координаты по *X*, *Y* и *Z* footnote:[Вообще-то это координаты не самого
объекта, а его 'центра'. Но это мало кого волнует.]

* углы поворота вокруг этих осей

* масштаб по трём этим осям.

Поскольку эти свойства есть у всех объектов, то и операции изменения этих
свойств (перемещение, вращение и масштабирование) можно выполнять над любым
объектом.

В терминологии Blender 'объектом' называется сущность, обладающая вот этими
свойствами. Идеальным объектом, у которого есть только эти свойства и более
ничего, является *Empty*, или «пустышка». Его можно добавить, нажав в 3D-окне
клавишу «пробел» и выбрав из появившегося меню пункт *Add* -> *Empty* (см. рис.
2.22).

image:img/figure2_22.png[]

*Рисунок 2.22* 'Добавление «пустышки»'

После выбора этого пункта на экране появится новый объект, состоящий из
центральной точки, из которой в разные стороны торчат стрелочки, обозначенные
буквами *x*, *y* и *z*.

[NOTE]
Если после добавления пустышки вы не увидели никаких изменений, то причина,
скорее всего, в следующем. Объекты добавляются туда, где находится 3D-курсор, а
в сцене по умолчанию оный располагается в центре пресловутого кубика. То есть
пустышка на самом деле добавилась, просто кубик её загораживает.

Нажмём клавишу *G* и перенесём пустышку в другое место. Теперь покрутим её,
нажав клавишу *R* и подвигав мышкой. Наконец, отмасштабируем клавишей *S*
(масштабирование пустышки графически выглядит как изменение размера её стрелок).
Итак, все основные операции работают.

[NOTE]
На первый взгляд пустышка кажется бесполезной, ведь она никак не отображается на
конечной отрендеренной картинке. Отображаться-то нечему, ибо кроме координат,
вращения и масштаба у неё ничего не имеется. Однако, польза от пустышки есть и,
как ни странно, часто является прямым продолжением её недостатка. Да-да,
пустышка полезна тем, что не отображается на готовом результате. Поэтому она
может служить идеальной точкой привязки для других объектов. Подробности будут
далее.

Итак, внутри каждого 3D-объекта находится такая вот пустышка. Но кроме неё к
объекту цепляются +++<em>блоки данных</em>+++ (по-английски 'datablock'), которые как раз и
определяют все остальные свойства объекта: внешний вид, цвет, текстуру и так
далее.

Запустим свежий сеанс Blender и добавим в сцену ещё один объект. Для этого
нажмём «пробел», а потом выберем пункт *Add* -> *Mesh* -> *UVsphere*. У нас
спросят параметры добавляемой сферы; они не важны, так что просто нажмём *OK*.
Сфера добавится внутрь куба по умолчанию. Вытащим её наружу клавишей *G* и
рассмотрим подробнее.

image:img/figure2_23.png[]

*Рисунок 2.23* 'Сфера и куб: а) внешний вид; б) свойства сферы; в) свойства
куба'

На панели *Link and Materials* отображаются свойства текущего объекта. Поле
*OB:* содержит имя 'объекта', а в поле *ME:* находится имя блока данных 'меша'
footnote:[Меш (англ. -- 'mesh') это совокупность вершин, рёбер и граней,
образующих форму объекта. Лично мне при слове «меш» представляется проволочный
каркас, обтянутый полиэтиленовой плёнкой.], привязанного к объекту. У сферы
*OB: Sphere* и *ME: Sphere*, а у куба *OB: Cube* и *ME: Cube*. Всё логично: к
объектам привязаны одноимённые меши.

Но кто сказал, что мы не можем этого изменить? Можем, конечно!

Выберем куб и, нажав на кнопку с треугольничками, расположенную слева от поля
*ME:*, выберем из появившегося списка *Sphere* вместо *Cube*. Обратите внимание:
на экране вместо куба появилась сфера, хотя 'объект' по прежнему называется
кубом (*OB: Cube*)! Просто он теперь хитро замаскирован и выглядит как сфера.

image:img/figure2_24.png[]

*Рисунок 2.24* 'Изменение меша: а) меню выбора меша; б) куб с мешем сферы'

Кстати, рядом с полем *ME: Sphere* появилась кнопочка с цифрой *2*. Она
означает, что меш *Sphere* используется двумя объектами. Поскольку это один и
тот же меш, то все его изменения будут автоматически отражаться на обоих
объектах. Если это не то, что нам нужно, то можно нажать на эту кнопочку. Будет
создана копия меша *Sphere*, которая получит имя *Sphere.001* (чтобы отличаться
от родителя) и будет отдана объекту *Cube* в единоличное
пользованиеfootnote:[По-английски это будет «Make a single-user copy.»].

Хорошо, меш *Sphere* используется аж двумя объектами, а кем же используется меш
*Cube*? Нажмём ещё раз на кнопку, вызывающую список имеющихся мешей. Обратите
внимание: рядом с мешем *Cube* появился ноль. Это означает, что этот блок данных
не используется никем, и Blender при сохранении файла его отбросит. Логично:
если блок не используется, то зачем его сохранять?

Но бывают ситуации, когда блок не используется никем 'сейчас', а завтра он нам
понадобится и будет привязан к какому-то объекту. Как же предупредить Blender,
что удалять его не надо, хотя он и не используется?

Для этого предназначена кнопка *F*, создающая фальшивого
пользователяfootnote:[По-английски -- 'fake user', потому и кнопка так
называется.] выбранного блока данных. Теперь, если мы назначим кубу меш *Cube* и
нажмём кнопку с буквой *F*, то дальше можем играться с назначением кубу любых
других мешей сколько угодно. Теперь *Cube* уже не потеряется при сохранении.

Подведём итог этого короткого, но важного раздела. Основой всего в Blender
является 'объект', хранящий основные свойства. Дополнительные свойства (форма,
материал, кривые анимации, etc) навешиваются на объект с помощью 'блоков
данных,' которые бывают разные. Один и тот же блок данных может использоваться
несколькими объектами. Блоки данных, не используемые ни одним из объектов,
удаляются при сохранении blend-файла для экономии места.
