Добавление и связывание
~~~~~~~~~~~~~~~~~~~~~~~

Мы знаем, что существуют блоки данных, которые можно привязывать к объектам и,
тем самым, менять их свойства. К примеру, если к кубику привязать меш сферы, то
он останется кубиком, но 'выглядеть' будет как сфера.

Но должны ли блоки данных находиться в том же файле, что и объект? Правильный
ответ: не обязательно.

Blender позволяет импортировать блоки данных из других файлов. Таким образом,
если нам нужно, чтобы кубик выглядел как сфера, хранящаяся в другом файле, то
меш сферы можно из этого файла импортировать. И сделать это можно двумя
способами: 'добавлением' ('append') и 'связыванием' ('link').

В обоих случаях это выполняется через пункт меню *File* -> *Append or Link* или
нажатием комбинации *Shift+F1*. Перед нами появляется знакомое окно выбора
файлов, где нужно выбрать файл, откуда мы будем импортировать блок данных.
Щёлкнув по blend-файлу мы обнаружим, что вошли внутрь как в папку. А внутри у
него находятся папки, содержащие блоки данных тех или иных типов.

image:img/figure2_25.png[]

*Рисунок 2.25* 'Выбор блока данных для добавления или связывания'

Окно выбора блока данных принципиально не отличается от обычного окна выбора
файлов, просто внизу у него есть дополнительные кнопки:

Relative Paths::
    Использовать относительные пути. Очень полезно, если работа над одним и тем
    же проектом ведётся на разным машинах.

Append::
    Импортировать блок данных в режиме 'добавления'.

Link::
    Импортировать блок данных в режиме 'связывания'.

Autosel::
    Автоматически делать выбранным объект после импортирования.

Active Layer::
    Добавлять объект в активный слой (про слои будет позже).

At Cursor::
    Добавлять объект в то место, где находится курсор. Если выбрано более одного
    объекта, использовать центр группыfootnote:[Вообще-то в подсказке Blender
    употребляется слово «центроид», но многие ли знают, что это центр тяжести
    фигуры?].

Теперь посмотрим, чем добавление отличается от связывания. Допустим, у нас есть
блок данных *Sphere*, расположенный в файле `spheres.blend`. И есть кубик,
расположенный в файле `cube.blend`. Нам нужно взять меш сферы из первого файла и
натянуть его на кубик во втором файле.

Если мы сделаем это в режиме 'добавления', то с блока данных *Sphere*,
находящегося в файле `spheres.blend`, будет снята точная копия, и помещена в
файл `cube.blend`. С этого момента мы можем с ней делать что угодно: изменение
копии никак не влияет на оригинал и наоборот.

В случае 'связывания' копия сниматься не будет, а вместо неё в файл `cube.blend`
будет добавлена запись, наподобие «а здесь должен быть блок данных *Sphere* из
файла `spheres.blend` ». Всякий раз при загрузке файла Blender будет натыкаться
на эту запись и подгружать блок данных из соответствующего файла.

Что это нам даёт?

Допустим, у нас есть трёхмерный объект, который используется сразу в нескольких
файлах. И нам потребовалось его доработать. Если он импортировался с помощью
'добавления', то одну и ту же доработку придётся проводить во всех файлах, где
он использовался. Если же применялось 'связывание', то исправить потребуется
только оригинал, на который указывают ссылки.

Таким образом, у обоих способов есть свои преимущества и недостатки. С копией,
импортированной добавлением, проще работать: её можно изменять прямо в том
файле, куда она добавлена. В случае связывания копия заблокирована от изменений,
менять можно только файл оригинала. Но и проявятся эти изменения автоматически
во всех копиях.
